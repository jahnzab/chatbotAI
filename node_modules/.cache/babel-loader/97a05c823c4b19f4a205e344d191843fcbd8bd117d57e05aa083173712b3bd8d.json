{"ast":null,"code":"var _jsxFileName = \"/home/jahanzaib/Desktop/chatgit/src/Llamabot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\n// import axios from \"axios\";\nimport \"./Llama.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Llamabot = () => {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    role: \"assistant\",\n    content: \"Hello! How can I assist you today?\"\n  }]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom function\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // Speech Recognition Setup\n  let recognition = null;\n  if (\"SpeechRecognition\" in window || \"webkitSpeechRecognition\" in window) {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    recognition = new SpeechRecognition();\n    recognition.continuous = false;\n    recognition.lang = \"en-US\";\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript);\n    };\n  } else {\n    console.warn(\"Speech recognition is not supported in this browser.\");\n  }\n\n  // Send message to FastAPI\n  // Send message to FastAPI\n  const handleSendMessage = async () => {\n    if (!userInput.trim()) return;\n    const newChatLog = [...chatLog, {\n      role: \"user\",\n      content: userInput\n    }];\n    setChatLog(newChatLog);\n    setUserInput(\"\");\n    setIsTyping(true);\n    try {\n      // Correct URL to Netlify function (Netlify Dev on port 8888)\n      const response = await fetch(\"/.netlify/functions/index\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question: userInput\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      const data = await response.json(); // Properly parse the JSON response\n      const botResponse = data.answer; // Access the correct property\n\n      setChatLog([...newChatLog, {\n        role: \"assistant\",\n        content: botResponse\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with FastAPI:\", error);\n      setChatLog([...newChatLog, {\n        role: \"assistant\",\n        content: \"Something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n      scrollToBottom();\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  // Start voice recognition\n  const startListening = () => {\n    if (recognition) {\n      recognition.start();\n    } else {\n      alert(\"Speech recognition is not supported in your browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"550px\",\n        height: \"88vh\",\n        position: \"absolute\",\n        left: \"450px\",\n        top: \"70px\",\n        backgroundColor: \"#2B2A33\",\n        padding: \"10px\",\n        color: \"white\",\n        fontFamily: \"Arial, sans-serif\",\n        borderRadius: \"10px\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Jahanzaib's Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: \"auto\",\n          marginTop: \"10px\"\n        },\n        children: [chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: msg.role === \"user\" ? \"flex-end\" : \"flex-start\",\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"black\",\n              color: \"white\",\n              padding: \"10px\",\n              borderRadius: \"10px\",\n              maxWidth: msg.role === \"user\" ? \"35%\" : \"80%\",\n              textAlign: \"left\",\n              wordWrap: \"break-word\",\n              overflowWrap: \"break-word\"\n            },\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"gray\",\n            marginBottom: \"10px\"\n          },\n          children: \"Assistant is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          backgroundColor: \"#2B2A33\",\n          borderRadius: \"10px\",\n          padding: \"10px\",\n          boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.2)\",\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyDown: handleKeyDown,\n          style: {\n            flex: 1,\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"black\",\n            color: \"white\"\n          },\n          placeholder: \"HOW CAN I HELP YOU...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          style: {\n            marginLeft: \"10px\",\n            padding: \"10px 15px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#007BFF\",\n            color: \"#fff\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startListening,\n          style: {\n            marginLeft: \"10px\",\n            padding: \"10px 15px\",\n            borderRadius: \"5px\",\n            backgroundColor: isListening ? \"red\" : \"#28A745\",\n            color: \"#fff\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: isListening ? \"Listening...\" : \"Start Listening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Llamabot, \"tclEY56juUPgpMf6HSZVa87IcYw=\");\n_c = Llamabot;\nexport default Llamabot;\nvar _c;\n$RefreshReg$(_c, \"Llamabot\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Llamabot","_s","userInput","setUserInput","chatLog","setChatLog","role","content","isTyping","setIsTyping","isListening","setIsListening","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","recognition","window","SpeechRecognition","webkitSpeechRecognition","continuous","lang","onstart","onend","onresult","event","transcript","results","console","warn","handleSendMessage","trim","newChatLog","response","fetch","method","headers","body","JSON","stringify","question","ok","Error","status","data","json","botResponse","answer","error","handleKeyDown","e","key","startListening","start","alert","style","display","children","width","height","position","left","top","backgroundColor","padding","color","fontFamily","borderRadius","boxSizing","flexDirection","margin","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflowY","marginTop","map","msg","index","justifyContent","marginBottom","maxWidth","wordWrap","overflowWrap","ref","boxShadow","type","value","onChange","target","onKeyDown","border","placeholder","onClick","marginLeft","cursor","_c","$RefreshReg$"],"sources":["/home/jahanzaib/Desktop/chatgit/src/Llamabot.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n// import axios from \"axios\";\nimport \"./Llama.css\";\n\nconst Llamabot = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([\n    { role: \"assistant\", content: \"Hello! How can I assist you today?\" },\n  ]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom function\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // Speech Recognition Setup\n  let recognition = null;\n  if (\"SpeechRecognition\" in window || \"webkitSpeechRecognition\" in window) {\n    const SpeechRecognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n    recognition = new SpeechRecognition();\n    recognition.continuous = false;\n    recognition.lang = \"en-US\";\n\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript);\n    };\n  } else {\n    console.warn(\"Speech recognition is not supported in this browser.\");\n  }\n\n  // Send message to FastAPI\n  // Send message to FastAPI\nconst handleSendMessage = async () => {\n  if (!userInput.trim()) return;\n\n  const newChatLog = [...chatLog, { role: \"user\", content: userInput }];\n  setChatLog(newChatLog);\n  setUserInput(\"\");\n  setIsTyping(true);\n\n  try {\n    // Correct URL to Netlify function (Netlify Dev on port 8888)\n    const response = await fetch(\"/.netlify/functions/index\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ question: userInput }),\n    });\n    \n    \n    \n    \n    \n\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status}`);\n    }\n\n    const data = await response.json(); // Properly parse the JSON response\n    const botResponse = data.answer;    // Access the correct property\n\n    setChatLog([...newChatLog, { role: \"assistant\", content: botResponse }]);\n  } catch (error) {\n    console.error(\"Error communicating with FastAPI:\", error);\n    setChatLog([\n      ...newChatLog,\n      { role: \"assistant\", content: \"Something went wrong. Please try again later.\" },\n    ]);\n  } finally {\n    setIsTyping(false);\n    scrollToBottom();\n  }\n};\n\n\n  // Handle Enter key press\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  // Start voice recognition\n  const startListening = () => {\n    if (recognition) {\n      recognition.start();\n    } else {\n      alert(\"Speech recognition is not supported in your browser.\");\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div\n        style={{\n          width: \"550px\",\n          height: \"88vh\",\n          position: \"absolute\",\n          left: \"450px\",\n          top: \"70px\",\n          backgroundColor: \"#2B2A33\",\n          padding: \"10px\",\n          color: \"white\",\n          fontFamily: \"Arial, sans-serif\",\n          borderRadius: \"10px\",\n          boxSizing: \"border-box\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          margin: \"10px\",\n        }}\n      >\n        <h1 style={{ textAlign: \"center\" }}>Jahanzaib's Chatbot</h1>\n\n        <div style={{ flex: 1, overflowY: \"auto\", marginTop: \"10px\" }}>\n          {chatLog.map((msg, index) => (\n            <div\n              key={index}\n              style={{\n                display: \"flex\",\n                justifyContent: msg.role === \"user\" ? \"flex-end\" : \"flex-start\",\n                marginBottom: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  color: \"white\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                  maxWidth: msg.role === \"user\" ? \"35%\" : \"80%\",\n                  textAlign: \"left\",\n                  wordWrap: \"break-word\",\n                  overflowWrap: \"break-word\",\n                }}\n              >\n                {msg.content}\n              </div>\n            </div>\n          ))}\n          {isTyping && (\n            <div style={{ color: \"gray\", marginBottom: \"10px\" }}>\n              Assistant is typing...\n            </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            backgroundColor: \"#2B2A33\",\n            borderRadius: \"10px\",\n            padding: \"10px\",\n            boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.2)\",\n            marginTop: \"10px\",\n          }}\n        >\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            onKeyDown={handleKeyDown}\n            style={{\n              flex: 1,\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\",\n              backgroundColor: \"black\",\n              color: \"white\",\n            }}\n            placeholder=\"HOW CAN I HELP YOU...\"\n          />\n          <button\n            onClick={handleSendMessage}\n            style={{\n              marginLeft: \"10px\",\n              padding: \"10px 15px\",\n              borderRadius: \"5px\",\n              backgroundColor: \"#007BFF\",\n              color: \"#fff\",\n              border: \"none\",\n              cursor: \"pointer\",\n            }}\n          >\n            Send\n          </button>\n          <button\n            onClick={startListening}\n            style={{\n              marginLeft: \"10px\",\n              padding: \"10px 15px\",\n              borderRadius: \"5px\",\n              backgroundColor: isListening ? \"red\" : \"#28A745\",\n              color: \"#fff\",\n              border: \"none\",\n              cursor: \"pointer\",\n            }}\n          >\n            {isListening ? \"Listening...\" : \"Start Listening\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Llamabot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}